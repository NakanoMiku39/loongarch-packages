--- a/PKGBUILD
+++ b/PKGBUILD
@@ -40,11 +40,8 @@ depends=(abseil-cpp
          zlib)
 makedepends=(ant
              cmake
-             cuda
-             cudnn
              eigen
              fmt
-             gcc13
              git
              glew
              hdf5
@@ -109,7 +106,6 @@ build() {
     -DINSTALL_PYTHON_EXAMPLES=ON
     -DCMAKE_INSTALL_PREFIX=/usr
     -DCPU_BASELINE_DISABLE=SSE3
-    -DCPU_BASELINE_REQUIRE=SSE2
     -DOPENCV_EXTRA_MODULES_PATH="$srcdir"/opencv_contrib/modules
     -DOPENCV_SKIP_PYTHON_LOADER=ON
     # cmake's FindLAPACK doesn't add cblas to LAPACK_LIBRARIES, so we need to specify them manually
@@ -128,7 +124,8 @@ build() {
   cmake -B build -S $pkgname "${cmake_options[@]}" \
     -DBUILD_WITH_DEBUG_INFO=ON
   cmake --build build
-
+  # Use a "multi-line comment" to keep patch from rotting
+  : <<'COMMENT_SEPARATOR'
   # In general, we want to list all real archs (sm_XX) and the latest virtual arch (compute_XX) for future PTX compatibility.
   # Valid values can be discovered from nvcc --help
   local cuda_archs="50;52;53;60;61;62;70;72;75;80;86;87;89;90;90a;100;100a;101;101a;120;120a;120-virtual"
@@ -145,6 +142,7 @@ build() {
     -DENABLE_CUDA_FIRST_CLASS_LANGUAGE=ON \
     -DCMAKE_CUDA_ARCHITECTURES="$cuda_archs"
   cmake --build build-cuda --verbose
+COMMENT_SEPARATOR
 }
 
 package_opencv() {
@@ -225,3 +223,9 @@ package_python-opencv-cuda() {
 
   DESTDIR="$pkgdir" cmake --install build-cuda/modules/python3
 }
+
+for i in "${!pkgname[@]}"; do
+  if [[ ${pkgname[$i]} == *"-cuda" ]]; then
+    unset 'pkgname[$i]'
+  fi
+done
